---
import { Image } from 'astro:assets';
interface Props {
  url: any;
  alt: string;
}

const { url, alt } = Astro.props;
const TEXT_BUTTON = {
  less: 'Ocultar',
  show: 'Mostrar',
};
---

<div class="modal">
  <div id={`button-${url.src}`} class="button">{TEXT_BUTTON.show}</div>
  <Image id={`img-${url.src}`} src={url} alt={alt} class="fadeIn no-display"/>
</div>

<script define:vars={{url, TEXT_BUTTON}}>
  const button = document.getElementById(`button-${url.src}`);
  const img = document.getElementById(`img-${url.src}`);

  const showModal = () => {
    img.classList.toggle('no-display')

    if (button.textContent === TEXT_BUTTON.less) {
      button.textContent = TEXT_BUTTON.show;
    } else {
      button.textContent = TEXT_BUTTON.less;
    }
  };
  if (button) {
    button.addEventListener('click', showModal);
  }
</script>

<style>
  .modal img {
    position: absolute;
    z-index: 999999;
    max-width: 100%;
    top: 1.6rem;
    left: 0;
    transition: opacity .5s ease-in-out;
  }
  .modal img.no-display {
    display: none;
  }
  .modal .button {
    cursor: pointer;
    font-size: 0.8rem;
    padding: 0.1rem 0.5rem;
    background: var(--color-bg-sidebar);
    border-radius: 1rem;
    color: var(--color-light-gray);
    margin-left: 0.5rem;
  }
  .modal .button:hover {
    background: var(--color-button-hover);
  }

  @media (min-width: 768px) {
    .modal {
      position: relative;
    }
    .modal img {
      max-width: 15rem;
      height: auto;
      left: 0.5rem;
    }
  }

  .fadeIn {
    animation: fadeIn .5s ease-in-out forwards;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
</style>
